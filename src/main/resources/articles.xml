<articles xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

<row>
  <id>95d4c3ae-9aed-4ba5-b161-fb8d4fec5ceb</id>
  <title>Баг в Google Photos позволял следить за геолокацией пользователей</title>
  <keywords>Google;Google Photos;Side-channel attack;Новости;Узявимости</keywords>
  <content>Специалист компании Impreva Рон Масас (Ron Masas) обнаружил в Google Photos проблему, которую можно описать как браузерную атаку по стороннему каналу (side-channel), приводящую к утечке данных. Для эксплуатации бага злоумышленник должен был заманить жертву на свой вредоносный сайт, где специальный код JavaScript «прощупывал» определенные URL, связанные с учетной записью пользователя в Google Photos. Скрипт полагается на время и размер полученных ответов (даже если это ответ «доступ запрещен»), дабы выявить определенные артефакты учетной записи. Созданный Масасом PoC-эксплоит злоупотреблял функциональностью поиска по Google Photos. Фактически вредоносный скрипт исследователя использовал браузер жертвы в качестве прокси для поиска по фотографиям Google Photos. Оценивая размер и время получения HTTP-ответов, исследователь мог определить, есть ли среди фотографий пользователя что-то, к примеру, отвечающее поисковому запросу «мое фото из Исландии». Таким образом, преступник, следящий за конкретной жертвой, мог установить, где бывала или не бывала его цель. Хотя проблема в Google Photos уже была устранена, эксперт предупреждает, что похожей уязвимости могут быть подвержены и другие сервисы (Dropbox, iCloud, Gmail, Twitter), что позволит потенциальному преступнику по кусочкам собрать множество различной информации о своей жертве. Стоит заметить, что аналогичную проблему в конце прошлого года уже устранили разработчики Facebook, причем обнаружил ее тоже Рон Масас.</content>
  <url>https://xakep.ru/2019/03/22/google-photos-bug/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>c34da115-1ebc-4417-8fb8-4a54ccf27af4</id>
  <title>Facebook заплатила 10 000 долларов за DoS-уязвимость в библиотеке Fizz</title>
  <keywords>DOS;Facebook;Fizz;Новости;Патчи;Уязвимости</keywords>
  <content>В августе 2018 года разработчики Facebook открыли исходные коды LS-библиотеки Fizz написанной на C++ 14 и позиционирующейся как надежная, высокоскоростная TLS-библиотека, поддерживающая все нововведения TLS 1.3 с упором на быстрое и беспроблемное развертывание. Теперь специалист компании Semmle обнаружил в Fizz проблему CVE-2019-3560, которая позволяет потенциальному злоумышленнику (неаутентифицированному и удаленному) осуществить DoS-атаку на сервер, использующий Fizz. Через TCP атакующий может направить вредоносное сообщение серверу, из-за чего тот войдет в бесконечный цикл и перестанет отвечать клиентам. При этом размер сообщения атакующего должен составлять всего около 64 Кб, то есть такая атака является весьма простой и дешевой для злоумышленника, но пагубной для сервера. Исследователь отмечает, что даже рядовой домашний ПК, со скоростью аплоада 1 Мбит/с, способен отправлять два таких сообщения в секунду. То есть небольшой ботнет легко сможет вывести из строя целый дата-центр. Уязвимость была найдена в конце февраля 2019 года, и на исправление проблемы во внутренней инфраструктуре Facebook ушло всего несколько дней, а также вскоре была представлена исправленная версия Fizz v2019.02.25.00. И хотя обычно bug bounty программа Facebook не распространяется на уязвимости, связанные с отказом в обслуживании (DoS), специалисту Semmle выплатили 10 000 долларов США в силу высокой опасности проблемы. Так как исследователь принял решение отдать деньги на благотворительность, Facebook удвоила эту сумму.</content>
  <url>https://xakep.ru/2019/03/22/fizz-dos/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>a92a109b-b38d-4484-a49c-2668b368de02</id>
  <title>Как минимум две хак-группы эксплуатируют опасные уязвимости в плагинах для WordPress</title>
  <keywords>Easy WP SMTP;Social Warfare;WordPress;Кибератаки;Новости;плагины;Уязвимости</keywords>
  <content>Сразу несколько компаний, работающих в сфере информационной безопасности, предупредили, что как минимум две хакерские группировки эксплуатируют уязвимости в популярных плагинах для WordPress. В частности, баги применяются для создания на сайтах административных аккаунтов (которые затем играю роль бэкдоров) и перенаправления посетителей на вредоносные ресурсы. Так, уязвимость нулевого дня была обнаружена в плагине Easy WP SMTP, насчитывающем более 300 000 установок. Первыми уязвимость и атаки на нее заметили специалисты компании NinTechNet, разрабатывающей Ninja Firewall для WordPress. Они сообщили о баге авторам плагина, после чего его исправили в версии v1.3.9.1. Впрочем, как сообщают эксперты компании Defiant, атаки это не остановило, так как администраторы многих сайтов по-прежнему не обновили плагин, а злоумышленники, похоже, стараются успеть скомпрометировать как можно больше ресурсов. По данным исследователей, уязвимость связана с импортом/экспортом настроек, функцией, появившейся в Easy WP SMTP в версии 1.3.9. Злоумышленники обнаружили, что через эту функциональность можно модифицировать настройки сайта в целом, а не только настройки самого плагина. Это позволяет преступникам открыть на уязвимом ресурсе регистрацию новых пользователей и создать учетную запись уровня subscriber, но присвоить ей права администратора. В настоящее время проблему эксплуатируют как минимум две хакерские группы, которые даже успели уже сменить тактику: вначале преступники вносили поправки в настройку wp_user_roles, а затем переключились на default_role. В результате все новые аккаунты получают права администратора. Обе группы используют один и тот же proof of concept эксплоит, описанный в отчете специалистов NinTechNet. Эксперты Defiant отмечают, что поведение хак-групп сильно разливается: одна группировка лишь создает на сайтах бэкдор-аккаунты и после этого пока не предпринимает никаких действий, тогда как вторая группировка действует более агрессивно и перенаправляет весь трафик со взломанных ресурсов на сайты фальшивой техподдержки. Еще одна уязвимость, уже находящаяся под атакой, была найдена в плагине Social Warfare, установленном на 70 000 сайтов. О проблеме предупредили эксперты Wordfence, Sucuri и NinTechNet: баг представляет собой называемую stored XSS, то есть «хранимую» или «постоянную» XSS-уязвимость. При помощи этой уязвимости злоумышленники могут внедрить вредоносный код JavaScript в кнопки для публикации ссылок в социальных сетях, представленные на страницах сайта. В итоге жертва оказывается перенаправлена на вредоносный ресурс. Опасный плагин пришлось временно исключить из официального репозитория WordPress, но в настоящее время уже была выпущена исправленная версия Social Warfare 3.5.3, обновиться до которой администраторам рекомендуется как можно скорее.</content>
  <url>https://xakep.ru/2019/03/22/easy-wp-smtp-social-warfare/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>09d191af-6049-49b4-a841-c53e0f40dc0c</id>
  <title>Смартфоны Nokia 7 Plus передавали данные о своих владельцах в Китай</title>
  <keywords>HMD Global;Nokia;Китай;Мобильные устройства;Новости;Слежка;Смартфоны</keywords>
  <content>Финскую компанию HMD Global, которая занимается разработкой и продажей устройств под брендом Nokia, уличили в том, что ее смартфоны передавали данные о пользователях в Китай. Первой о проблеме рассказала NRK («Норвежская вещательная корпорация»), получившая «наводку» на эту историю от простого пользователя. По данным NRK, смартфоны собирали информацию о своих владельцах при каждом включении, разблокировке или включение экрана. Среди собираемых данных были GPS-координаты, информация о сети, серийный номер устройства и номер SIM-карты. Затем эта информация передавалась на китайский сервер в сети China Telecom. Причем до сих пор неясно, кому именно принадлежит сервер на zzhc.vnet.cn. Финское издание Helsingin Sanomat сообщает, что представители HMD Global объяснили сбор данных ошибкой в коде. Якобы в прошивке устройств случайно забыли некий инструмент для активации, предназначенный для использование в других странах. Также в компании сообщили, что из-за этой ошибки пострадало только небольшое количество смартфонов Nokia 7 Plus, и HMD Global уже удалила этот код из прошивок устройств. В NRK полагают, что код, отвечающий за сбор данных, был написан примерно в 2014 году. Так как одна из используемых «шпионским» инструментом поддиректорий называется China Telecom, исследователи предполагают, что код действительно предназначался для устройств, продаваемых в Китае, и имел отношение к местным требованиям о сборе данных. Интересно, что о подозрительном трафике, связанном с zzhc.vnet.cn, еще в январе 2019 года сообщал рядовой пользователь Twitter, однако тогда это сообщение осталось никем незамеченным. #dataleakage #wtf Saw in a proxy multiple CLEAR text request from an Android phone to https://t.co/EzKgCvqWPS which sends private data like IMEI, CELLID , CCID. Anybody knows what app is causing this or anybody knows anybody who might know? cc @pspacecomplete , @c0dmtr1x pic.twitter.com/GsHCd6cE9U — Dirk (@drwetter) January 4, 2019</content>
  <url>https://xakep.ru/2019/03/22/nokia-watching-you/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>01adbe48-2fe8-4f8b-b885-e2dd6118ba0c</id>
  <title>Файлы по рельсам. Как читать любые файлы с сервера через Ruby on Rails</title>
  <keywords>Ruby on Rails;visualhack;Взлом;Выбор редактора;Статьи;Уязвимости</keywords>
  <content>Уязвимость имеет номер CVE-2019-5418 и заключается в раскрытии содержимого файла в компоненте ActionView. Специально сформированные заголовки Accept при выполнении контроллеров, в которых имеются конструкции render file:, могут привести к чтению произвольных файлов на целевой системе. Уязвимы версии Ruby on Rails до 5.2.1. Демонстрацию уязвимости начинаем с конструирования стенда. Возьмем обычный контейнер Docker с Debian. Устанавливаем Ruby, Bundler и некоторые зависимости. Теперь установим фреймворк Rails уязвимой версии, например 5.2.1. Далее нужно создать папку для тестового проекта, а в ней Gemfile — это список того, какие гемы и каких версий нужны разрабатываемому проекту. Теперь скачаем и установим все это дело. После этих манипуляций нужно создать приложение Rails из стандартного шаблона. И снова установим необходимые гемы при помощи Bundle. Приложение готово, и можно запустить веб-сервер, чтобы проверить его работу. Если все работает нормально, то создаем новый контроллер. Назовем его vuln. Фреймворк создаст необходимые файлы в директории с проектом. Откроем сам код контроллера app/controllers/vuln_controller.rb и добавим в него уязвимый код. В качестве представления (view) можно указать путь до любого файла. Я создал файл hello в корне проекта с содержимым «Hi there!». Также нужно отредактировать файл с роутами config/routes.rb и прописать там имя нашего контроллера. Снова запустим веб-сервер. Если теперь ты перейдешь по URI /vuln, то увидишь строчку Hi there! из файла hello. Стенд готов. Если тебя интересует отладка, то можешь воспользоваться удаленной (c некоторыми ограничениями). Я для этого возьму IDE RubyMine. При запуске Docker нужно открыть еще один порт для подключения отладчика. Затем нужно установить на обоих машинах гемы для дебага. Следи, чтобы они были одинаковых версий. Копируем проект на локальную машину, открываем его в RubyMine и добавляем конфигурацию удаленной отладки. Указываем необходимые настройки. Обрати внимание на локальный и удаленный пути до проекта. В поле Server command находится команда, которую нужно выполнить на сервере, чтобы начать слушать порт и ждать подключения отладчика. Вместо $COMMAND$ указываем строку для запуска сервера. Теперь можно расставлять брейк-пойнты и наслаждаться отладкой. Также никто не мешает отлаживать на этой же машине, вообще не используя Docker. В этот раз начнем сразу с эксплоита, так как он очень прост. Нужно отправить запрос на уязвимый роут и указать в качестве заголовка Accept конструкцию c path traversal и {{ в конце. В ответ получишь содержимое файла /etc/passwd. Теперь разберемся, что приводит к такому печальному поведению. Скачиваем исходники этой версии Rails. Метод render может использовать в качестве представления файлы, которые находятся за пределами директории разрабатываемого приложения. Заглянем в файл template_renderer.rb. При обработке опции file вызывается метод find_file, чтобы определить, какой шаблон будет отображен. Посмотрим в тело метода. Далее args_for_lookup генерирует опции, которые необходимы для рендеринга вида. После выполнения этого куска кода данные из заголовка Accept оказываются в переменной details[format]. Затем вызывается @view_paths.find_file. Файл находится за пределами директории приложения (app), поэтому переменная outside_app установлена в значение True и будет вызван метод find_all_anywhere. Далее вызов find_templates начинает процесс генерации пути до файла представления. Обрати внимание на дефолтный паттерн (строка 209). Если ты легитимно обращаешься к /vuln, то готовый паттерн будет выглядеть примерно так: В процессе вызывается метод query, в качестве аргументов отправляется наша переменная details[:formats]. Здесь в build_query формируется шаблон поиска пути, из которого будет подгружен файл вида. Благодаря тому что переменная details[formats] никак не фильтруется, атакующий имеет возможность внедрять произвольную строку в формат поиска файла представления. Используя конструкции ../, мы осуществляем выход из директории и добираемся до пути /etc/passwd, а две фигурные скобки в конце строки добавляем для того, чтобы конструкция получилась валидная. Таким образом, мы как бы расширяем дефолтный паттерн. В итоге, после того как отработает File.expand_path, строка для поиска файла вида будет иметь вид Дальше методы render_template и render_with_layout делают свое дело и загружают содержимое файла passwd во время рендеринга. Эксплуатация успешно завершена. Вот такая банальная и одновременно опасная уязвимость. Советую проверить свои проекты на наличие конструкций вида render file:, и, если они имеются, надо менять логику. И советую обновить Rails до последних версий, если приложение это позволяет. Разработчики быстро отреагировали и выпустили патч для устранения этой уязвимости, так что версии 5.2.1 и старше ее лишены.</content>
  <url>https://xakep.ru/2019/03/22/rails-render-file/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>4c11ccf6-cd84-4002-b87f-7d6ee932239f</id>
  <title>Преступники оплачивают онлайн-игры и услуги хостинга с помощью банкера Flexnet</title>
  <keywords>Android;Flexnet;Sms;Банковские трояны;Вирусы;Новости</keywords>
  <content>Аналитики компании «Доктор Веб» изучили банковский троян Flexnet, построенный на исходниках известной малвари GM Bot и представляющий угрозу для пользователей Android. Напомню, что сам GM Bot ИБ-специалисты отслеживали с 2014 года, а в 2016 году исходные коды малвари попали в открытый доступ, после чего на базе этой малвари было создано немало вредоносов. По данным «Доктор Веб», первые версии Flexnet, в которых использовались наработки авторов GM Bot, появились вскоре после утечки исходных кодов, но атаки на владельцев Android-устройств продолжаются до сих пор. В настоящее время злоумышленники распространяют банкера при помощи SMS-спама. В сообщениях потенциальным жертвам предлагается перейти по ссылке и загрузить ту или иную программу или игру. Троян маскируется под приложения «Друг вокруг», GTA V, инструменты для раскрутки аккаунтов в Instagram и «ВКонтакте» и так далее. При запуске банкер запрашивает права администратора, показывая стандартное диалоговое окно. Если жертва предоставляет ему нужные полномочия, троян сообщает о якобы возникшей ошибке и «прячет» свой значок с экрана приложений. Так он скрывается от пользователя и пытается затруднить свое удаление. По сравнению с другими современными Android-банкерами возможности Flexnet весьма ограничены. Троян способен только перехватывать и отправлять SMS-сообщения, а также выполнять USSD-запросы. Впрочем и этих функций оказывается вполне достаточно для кражи средств пользователей. Например, злоумышленники пополняют внутриигровые счета в популярных играх через SMS. Эта схема работает следующим образом. Сначала троян проверяет баланс банковской карты пользователя, отправляя SMS-запрос в систему обслуживания мобильного банкинга. Затем он перехватывает ответное сообщение с информацией об остатке на счете и передает эти сведения своим операторам. Далее они формируют запрос на пополнение баланса интересующей их игры. В запросе указывается номер телефона жертвы и сумма для перевода. После этого пользователю приходит SMS с проверочным кодом. Flexnet перехватывает это сообщение, передает его содержимое мошенникам, а те отдают банкеру команду на отправку SMS с полученным кодом для подтверждения операции. Аналогичным образом реализуются и другие мошеннические схемы. Так, злоумышленники могут оплачивать услуги хостинг-провайдеров, используя деньги с баланса мобильных номеров своих жертв. Для этого троян отправляет SMS с необходимыми параметрами на специализированные номера.  Если же на счету потенциальной жертвы недостаточно средств, преступники все равно могут украсть деньги. Для этого мошенники используют тарифную опцию сотовых операторов «Обещанный платеж», которая позволяет оплачивать услуги в долг. Как и в других случаях, операторы малвари дают команду на отправку SMS с нужными параметрами. При этом до определенного времени владельцы зараженных устройств не подозревают о пропаже денег, поскольку банкер скрывает от них все подозрительные сообщения. Также троян способен переводить деньги с банковских карт жертв на счета своих операторов. Однако кредитные организации при помощи специальных алгоритмов отслеживают подозрительные операции, поэтому вероятность блокировки такого перевода очень высока, тогда как описанные выше схемы позволяют мошенникам в течение длительного времени похищать относительно небольшие суммы и оставаться незамеченными. Еще одна функция Flexnet — похищение конфиденциальных данных. Злоумышленники могут получать доступ к аккаунтам пользователей социальных сетей, интернет-магазинов, личным кабинетам на сайтах операторов связи и другим онлайн-сервисам. Зная номер мобильного телефона жертвы, злоумышленники пытаются выполнить вход в ее учетную запись. На этот номер поступает одноразовый проверочный код, который троян перехватывает и отправляет своим «хозяевам». Если номер владельца зараженного устройства не привязан к одному из целевых сервисов, преступники могут использовать такой номер для регистрации новой учетной записи. В дальнейшем скомпрометированные и вновь созданные аккаунты могут попасть на черный рынок, применяться для рассылки спама и организации фишинговых атак. Сообщается, что при содействии регистратора REG.ru были блокированы несколько управляющих серверов Flexnet, и часть зараженных устройств злоумышленники больше не контролируют.</content>
  <url>https://xakep.ru/2019/03/22/flexnet/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>ab79f94a-e83c-4ae6-964b-dc0d65f2cedb</id>
  <title>Эксперты Positive Technologies нашли в Android уязвимость пятилетней давности</title>
  <keywords>Android;WebView;Мобильные устройства;Новости;Уязвимости</keywords>
  <content>Специалист группы исследований безопасности мобильных приложений Positive Technologies Сергей Тошин обнаружил критическую уязвимость (CVE-2019-5765) в компоненте WebView. Проблема позволяла злоумышленнику получить доступ к конфиденциальным данным пользователей Android (включая токены и историю браузера) через установленное вредоносное приложение или приложение с мгновенным запуском (Android instant apps). Разработчики Google исправили баг и сообщили, что свидетельств его эксплуатации обнаружено не было. Проблема была обнаружена в движке Chromium, на котором построен WebView, начиная с Android 4.4 (KitKat). Уязвимость угрожала не только пользователям Android старше версии 4.4 (включая актуальные 7.0, 8.0 и 9.0) и Google Chrome, но и пользователям мобильных браузеров на базе Chromium, таких как Samsung Internet, Яндекс.Браузер и так далее. «Компонент WebView сегодня используется в большинстве мобильных приложений Android, поэтому атаки на него крайне опасны, — объясняет Сергей Тошин. — Самый очевидный сценарий атаки связан с малоизвестными сторонними приложениями. Злоумышленник может добавить в них вредоносную функциональность для считывания информации из WebView других приложений, что позволит ему перехватывать историю браузера, аутентификационные токены и заголовки (которые являются довольно распространенным способом аутентификации) и другие данные». Технология instant apps позволяет просмотреть приложение на устройстве без установки: на устройство пользователя скачивается только небольшой файл после перехода по ссылке в браузере. При атаке через instant apps перехват данных возможен, если пользователь нажмет на ссылку с вредоносным мгновенным приложением. «Начиная с Android 7.0, компонент WebView реализован через Google Chrome, поэтому для исправления уязвимости надо просто обновить этот браузер [до версии Google Chrome 72, прим. ред.], — отмечает Сергей Тошин. — На более старых версиях Android придется актуализировать компонент WebView через систему обновления Google Play. Пользователям оборудования, на котором отсутствуют сервисы Google, нужно дождаться обновления WebView от поставщика устройства».</content>
  <url>https://xakep.ru/2019/03/22/webview-bug/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>d84a91f1-e28d-4a00-9edc-6935268fba0a</id>
  <title>Ghidra vs IDA Pro. На что способен бесплатный тулкит для реверса, созданный в АНБ</title>
  <keywords>Ghidra;Взлом;Выбор редактора;Обзоры;Реверс-инжиниринг;Софт;Статьи;США</keywords>
  <content>АНБ в рамках программы Technology Transfer Program уже открыло исходные коды 32 проектов (полный список можно посмотреть на GitHub). Конечно, не обходится без шуточек о том, что АНБ будет использовать эти средства для слежения за пользователями. С одной стороны, конечно, код продуктов открыт, а их пользователи достаточно хардкорны, чтобы не полениться провести аудит. С другой — первый же косяк нашелся сразу после релиза Ghidra. Британский ИБ-эксперт и глава Hacker House Мэттью Хики (Matthew Hickey) заметил, что в отладочном режиме инструмент Ghidra открывает и слушает порт 18001. Это позволяет подключиться к Ghidra удаленно, через JDWP, — разумеется, с целью все той же отладки. Хики отмечает, что исправить проблему совсем несложно — достаточно поменять строку 150 в файле support/launch.sh со звездочки на 127.0.0.1. Постепенно всплывают и другие баги. Например, была найдена возможность эксплуатировать XXE при условии, что пользователь Ghidra откроет специально сформированный проект. Так что будь начеку! Скачать Ghidra можно с официального сайта ghidra-sre.org, но есть небольшая проблема: сайт недоступен из российских сетей (и, по некоторым данным, из канадских). Но я думаю, что это не препятствие для читателей «Хакера». Можно воспользоваться любым VPN или на крайний случай Tor. Итак, ты скачал архив ghidra_9.0_PUBLIC_20190228 и распаковал его. Давай немного пробежимся по основным папкам и посмотрим, что в них. Настоятельно рекомендую заглянуть в папку docs — там много информации о самой Ghidra, о разработке плагинов для нее и обзор основных возможностей в виде слайдов и документов PDF. Вся информация, естественно, на английском. Далее идут папки с лицензиями — в них ничего интересного. В папке server есть инструментарий для запуска сервера удаленной отладки. В папке support собраны вспомогательные инструменты, без которых программа работать не будет. В папке Ghidra уже интереснее: в Processors можно ознакомиться со всеми поддерживаемыми архитектурами. Вот их полный список: 6502, 68000, 6805, 8051, 8085, AARCH64, ARM, Atmel, CR16, DATA, JVM, MIPS, PA-RISC, PIC, PowerPC, Sparc, TI_MSP430, Toy, x86, Z80. Настало время смотреть само приложение! Чтобы открыть Ghidra в Windows, запускаем ghidraRun.bat, в Linux — ghidraRun.sh. Проект написан в основном на Java, поэтому качай и ставь Java Runtime, если у тебя его нет. Первым делом нам предлагают создать проект, в который мы добавим нужные бинарные файлы для исследования. После этого становится активной иконка с зеленым драконом, которая и откроет для нас CodeBrowser — основную среду для работы. Сначала появляется окно с технической информацией о загружаемом файле, потом приглашение провести анализ и выбрать опции для него. Соглашаемся. Выглядит основной интерфейс довольно непривычно — во всяком случае, для меня. И вот мы оказываемся в заголовке нашего файла. Перед нами структура IMAGE_DOS_HEADER, а не точка входа. Интересно! Надо сказать, что все поля отображены корректно, да и выглядит все более-менее сносно и информативно. При первом запуске приложения я столкнулся с немного неудобным отображением кода и других полей в различных окнах дизассемблера. Но все это можно настроить при помощи специальной кнопки Edit the listing fields в верхнем правом углу каждого окна. Справа располагается окно декомпилятора, к нему мы еще вернемся. Там же есть вкладка Functions. Давай нажмем на нее. Здесь видим список функций с их сигнатурами — очень удобно, на мой взгляд. Давай выберем какую-нибудь функцию и посмотрим, что будет. Материалы из последних выпусков можно покупать отдельно только через два месяца после публикации. Чтобы продолжить чтение, необходимо купить подписку. Подписка позволит тебе в течение указанного срока читать ВСЕ платные материалы сайта. Мы принимаем оплату банковскими картами, электронными деньгами и переводами со счетов мобильных операторов. Подробнее о подписке 7390 р. 720 р.</content>
  <url>https://xakep.ru/2019/03/20/nsa-ghidra/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>4e84f60e-5eb3-43c1-9747-0b0b081529d4</id>
  <title>Facebook хранила пароли миллионов пользователей в открытом виде, и сотрудники имели к ним доступ</title>
  <keywords>Facebook;Информационная безопасность;Новости;Пароли;приватность;Социальные сети;Утечка данных</keywords>
  <content>Компания Facebook вновь оказалась в центре скандала, связанного с приватностью пользовательских данных. На этот раз выяснилось, что пароли 200-600 млн пользователей от Facebook Lite, Facebook и Instagram хранились на серверах компании в формате простого текста, доступные тысячам сотрудников. Первым о проблеме рассказал известный ИБ-журналист Брайан Кребс (Brian Krebs). В своей статье Кребс ссылается на данные, полученные от неназванного сотрудника Facebook, занимающего некий руководящий пост в компании. По информации Кребса, в настоящее время Facebook проводит внутреннее расследование, которое уже показало, что пароли сотен миллионов пользователей хранились в открытом виде и были свободно доступны 20 000 сотрудников компании. Источник рассказал, что пока представители социальной сети не сумели установить точное количество паролей, а также определить, как давно те были доступны сотрудникам. Некоторые данные оказались датированы 2012 годом. Также, по словам источника, в логах уже были обнаружены свидетельства того, что около 2000 инженеров и разработчиков Facebook сделали порядка 9 000 000 внутренних запросов к элементам данных, содержавшим пользовательские пароли в открытом виде. После публикации Кребса представители Facebook были вынуждены опубликовать официальное заявление о случившемся. В компании подтвердили, что проблему с паролями обнаружили еще в январе текущего года, и в настоящее время проводится расследование. Пока в Facebook не готовы назвать точных чисел и дат (впрочем, сообщается, что речь идет о десятках миллионов пользователей). Однако представители социальной сети уверяют, что пароли пользователей не были «видны» никому за пределами Facebook, а к настоящему моменту не было выявлено ни одного случая злоупотребления этими данными со стороны самих сотрудников. Согласно заявлению социальной сети, пароли на серверах компании, разумеется, сохранялись «непреднамеренно». В настоящее время все пароли уже были скрыты, а пострадавших пользователей обязательно уведомят о случившемся, как только расследование инцидента будет закончено.</content>
  <url>https://xakep.ru/2019/03/21/fb-stored-passwords/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>8da780af-0540-4288-9cca-0335e4cc9c16</id>
  <title>Новое в программе PHDays: команда PT ExpertSecurity Center собирает defensive-трек</title>
  <keywords>PHDays;PHDays 9;Анонс;Конференции;Новости</keywords>
  <content>В этом году на PHDays будет defensive-трек! Форум всегда был в большей степени посвящен атакам, уязвимостям и техникам взлома, и в меньшей степени – защите. В этом году организаторы решили восстановить баланс и выделили отдельный технический трек thrEat reSearch Camp для докладов, посвященные темам incident response, threat intelligence, threat hunting, OSINT и malware analysis. За два дня российские и зарубежные эксперты расскажут о новых APT-кампаниях, поделятся эффективными методами и инструментами выявления инцидентов, мониторинга дарквеба и анализа открытых источников, разберут по полочкам сложную малварь. В программе доклады разной сложности — от уровня для начинающих до хардкора. «Из года в год появляется все больше информации о новых уязвимостях и крутых способах взлома, но тема защиты от них не освещается также широко. На PHDays 9 мы решили изменить этот тренд и рассказать о тех, кто стоит по другую сторону баррикад, — о специалистах, которые каждый день защищают нас от киберпреступников, — рассказывает руководитель отдела реагирования Positive Technologies, член оргкомитета PHDays Эльмар Набигаев. — Трек thrEat reSearch Camp призван стать площадкой для обмена идеями для всех участников PHDays. Надеемся, что это станет доброй традицией». Программный комитет уже отобрал первую группу спикеров, чьи выступления прозвучат на defensive-треке. Посетители PHDays узнают, как оптическое распознавание символов помогает в борьбе с макровирусами, услышат доклад о тонкостях расследования инцидентов в облаках, познакомятся с новым методом анализа журналов Active Directory, а также с тем, как специалисты по безопасности мониторят угрозы в даркнете. Атаки с использованием документов с внедренным вредоносным кодом — классика жанра: их бум пришелся на 90-е годы. Наиболее простой сценарий заражения вредоносным ПО: когда злоумышленники внедряют какой-нибудь макрос VBA, например, в счет на оплату. Многие помнят знаменитый макровирус Melissa, который появился в марте 1999 года и заразил сотни тысяч компьютеров по всему миру. Неожиданно для всех в 2014 году макровирусы получили второе рождение — компания Microsoft отметила рост числа таких угроз: на пике защитные решения Microsoft показали около 8000 VBA-детектов в сутки. В 2016 году компания Microsoft по умолчанию отключила макросы в программах пакета MS Office. Однако разработчики вредоносного ПО нашли способ обойти это ограничение: теперь они вежливо просят пользователей включить макросы. Реверс-инженер компании Check Point Бен Херцог (Ben Herzog) представит новый подход к обнаружению классической атаки. Злоумышленникам, создающим такие документы, приходится использовать слова «разрешить макросы» и прятать их в заголовке документа или на рисунке. Бен продемонстрирует классификатор, который сразу выявляет зараженные файлы, и на примере десятков тысяч вредоносных документов расскажет о результатах проведенных им исследований. На PHDays с докладом «Визуализация и машинное обучение для анализа журналов событий Active Directory» выступят исследователи группы реагирования на инциденты JPCERT/CC. Томоаки Тани (Tomoaki Tani) координирует расследование инцидентов кибербезопасности и анализирует тенденции киберинцидентов и методы атак, а Сюсей Томонага (Shusei Tomonaga) анализирует вредоносное ПО и расследует инциденты, возглавляет группу анализа целенаправленных атак на ключевые объекты японской промышленности. Анализ журнала событий — ключевой этап в расследовании инцидентов. Анализ журналов Active Directory позволяет определить узлы, которые были скомпрометированы в результате lateral movement. Слушатели познакомятся с новым методом анализа журналов событий Active Directory с помощью LogonTracer — инструмента, который визуализирует отношения между учетными записями и узлами. Все больше компаний переносят свою инфраструктуру в облачную среду — Amazon Web Services, Microsoft Azure или Google Cloud Platform. По данным аналитической компании IDC, в 2018 году самые большие затраты на облачные сервисы отмечены в здравоохранении (12,1 млрд $), госсекторе (8,4 млрд $) и на финансовом рынке (7,3 млрд $). По прогнозам аналитиков, инвестиции в облачные сервисы будут расти ускоренными темпами до 2021 года. Всплеск популярности облачных сред объясняется цифровизацией ключевых отраслей экономики. Несмотря на все преимущества, которые дают облачные среды, их использование сопряжено с различными киберрисками. Специалист группы реагирования на инциденты Société Générale и соучредитель ArxSys Фредерик Баглен (Frederic Baguelin) затронет проблему расследования инцидентов безопасности в облачной инфраструктуре. Он подробно расскажет о сервисе EC2 и о методах анализа экземпляра EC2 в экосистеме AWS, а также предложит автоматизированный подход на основе AWS и Python API, который позволит получать снимки для проведения локального анализа. Также Фредерик продемонстрирует инструменты для проведения полного сканирования из облака. Руководитель компании Volon по продуктам и технологиям Муслим Косер (Muslim Koser) раскроет секреты эффективного поиска данных о злоумышленниках в даркнете. Он более 20 лет работает в сфере ИБ, а последние 10 лет возглавлял группы мониторинга угроз. Слушатели форума узнают, как находить нужную информацию даже в очень больших объемах данных, а также как объединить возможности искусственного интеллекта и машинного обучения с возможностями человеческого разума, чтобы извлечь из собранных данных максимальную пользу. Напоминаем, что у вас еще есть шанс выступить на одной трибуне вместе с именитыми экспертами, заявки принимаются до 31 марта 2019 года.</content>
  <url>https://xakep.ru/2019/03/21/threat-research-camp/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>af3090be-8a4b-408e-9357-c8c5c6a03b06</id>
  <title>Ghidra vs crackme. Обкатываем конкурента IDA Pro на примере решения хитрой крэкми с VM</title>
  <keywords>crackme;Ghidra;Взлом;Выбор редактора;Реверс-инжиниринг;Статьи</keywords>
  <content>Скачать крэкми можно с сайта MalwareTech, пароль к архиву — тоже MalwareTech. Итак, для начала посмотрим, что в архиве. Видим исполняемый файл vm1.exe и файл дампа ram.bin. В пояснении на сайте написано, что мы имеем дело с восьмибитной виртуальной машиной. Файл дампа — не что иное, как кусок памяти, в котором вперемешку расположены рандомные данные и флаг, который мы должны найти. Оставим пока в покое файл дампа и посмотрим на vm1.exe через программу DiE. DiE не показывает ничего интересного, с энтропией все в порядке. Значит, никакой навесной защиты нет, но проверить все равно стоило. Давай загрузим этот файл в Ghidra и посмотрим, что она выдаст. Я приведу полный листинг приложения без функций (он совсем небольшой) — чтобы ты понял, с чем мы имеем дело. Как видишь, код простой и легко читается. Давай воспользуемся декомпилятором Ghidra и посмотрим, что он выдаст. Я добавил отступы для удобочитаемости — отделил объявления переменных от остального кода. Код весьма простой: сначала выделяется память в куче GetProcessHeap -&gt; HeapAlloc, далее в нее копируется 0x1fb(507) байт из DAT_00404040. Но у нас нет ничего интересного в 00404040! Вспоминаем, что в инструкции к крэкми говорилось, что ram.bin — это кусок памяти. Разумеется, если посмотреть размер файла, он оказывается равным 507 байт. Загружаем ram.bin в HxD или любой другой шестнадцатеричный редактор и смотрим. Увы, ничего внятного там не обнаруживаем. Но логика работы немного проясняется: DAT_0040423c — это ram.bin (наши выделенные 507 байт в куче). Давай переименуем DAT_0040423c в RAM, чтобы было удобнее ориентироваться в коде. Далее заходим в функцию FUN_004022e0. Материалы из последних выпусков можно покупать отдельно только через два месяца после публикации. Чтобы продолжить чтение, необходимо купить подписку. Подписка позволит тебе в течение указанного срока читать ВСЕ платные материалы сайта. Мы принимаем оплату банковскими картами, электронными деньгами и переводами со счетов мобильных операторов. Подробнее о подписке 7390 р. 720 р.</content>
  <url>https://xakep.ru/2019/03/21/ghidra-vs-crackme/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>6d33adba-6e33-420b-8e5a-eba562f575e0</id>
  <title>Серьезные уязвимости исправлены в составе Libssh2 и PuTTY</title>
  <keywords>Libssh2;PuTTY;Новости;Патчи;Софт;Уязвимости</keywords>
  <content>На этой неделе сразу два популярных инструмента получили важные обновления: 9 уязвимостей устранено в библиотеке Libssh2 и еще 8 проблем пропатчили в Putty. Разработчики популярной опенсорсной библиотеки Libssh2 выпустили обновленную версию 1.8.1, в которой было устранено сразу девять весьма серьезных проблем. Все исправленные уязвимости связаны с нарушением целостности информации в памяти, что в итоге может привести к исполнению произвольного кода в клиентской системе. Проблемы были обнаружены специалистами компании Canonical, и у исследователей нет никаких свидетельств того, что эти уязвимости уже использовали хакеры. Сразу четыре проблемы (CVE-2019-3855, CVE-2019-3856, CVE-2019-3857 и CVE-2019-3863) были связаны с целочисленным переполнением, то есть позволяли атакующему записывать данные за пределами выделенного участка памяти. Еще четыре уязвимости (CVE-2019-3859, CVE-2019-3860, CVE-2019-3861 и CVE-2019-3862) позволяли потенциальному злоумышленнику осуществить чтение за границами выделенной памяти (out-of-bounds reads). Эти баги могли не только привести к компрометации данных, но и вызвать отказ в обслуживании. Оставшаяся уязвимость CVE-2019-3858, в свою очередь, могла использоваться для распределения нулевых байтов, что опять же приводило к отказу в обслуживании и возможному чтению за границами выделенной памяти. Спустя почти 20 месяцев после последнего релиза популярный клиент для удаленного доступа PuTTY получил новую версию 0.71 для Windows и Unix, в которой было исправлено восемь серьезных проблем. Среди исправленных уязвимостей были: Отмечается, что пять из восьми уязвимостей были обнаружены в рамках bug bounty программы для опенсорсных решений, которую спонсируют власти ЕС: Free and Open Source Software Audit (FOSSA). Напомню, что в рамках FOSSA исследователям предложили искать баги в составе Filezilla, Apache Kafka, Notepad++, PuTTY, VLC Media Player, midPoint, FLUX TL, KeePass, 7-zip, Digital Signature Services, Drupal, GNU C Library (glibc), PHP Symfony, Apache Tomcat и WSO2. При этом максимальный размер выплаты, 90 000 евро, как раз был установлен за баги в PuTTY (выплаты за уязвимости в других продуктах варьируются от 25 000 до 89 000 евро).</content>
  <url>https://xakep.ru/2019/03/21/libssh2-putty-bugs/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>84f724e8-c9d7-4b8e-86f3-a8b814de25a0</id>
  <title>Еврокомиссия оштрафовала Google на 1,7 млрд долларов из-за нарушений в сфере рекламы</title>
  <keywords>Android;Google;Еврокомиссия;ЕС;Интернет-реклама;Мобильные устройства;Новости;Штраф</keywords>
  <content>В третий раз за последние два года Еврокомиссия наложила на компанию Google крупный штраф. На этот раз проблемы у поискового гиганта возникли из-за злоупотребления своим доминирующим положением на рынке рекламы. В частности, речь идет о AdSense for Search. То есть дело в не тех рекламных объявлениях, что отображаются в результатах поиска Google.com, дело в с кастомном поиске через Google, который может быть встроен на другие сайты (как правило, для поиска по ним же). По данным регулятора, более 10 лет (с 2006 по 2016 годы) Google пользовалась тем, что занимает доминирующую позицию в сфере рекламы и мешала другим компаниям конкурировать и развиваться. Google не только навязывала компаниям свою рекламную платформу, но также не позволяла своим конкурентам размещать рекламные объявления на таких сайтах, тогда как реклама самой Google получала лучшие места («премиальное размещение» или Premium Placement). Происходившее хорошо иллюстрирует представленная регулятором иллюстрация. Хотя на этот раз Google сотрудничала с Еврокомиссией, а в работу AdSense давно были внесены изменения, из-за допущенных нарушений компания все равно должна будет выплатить штраф в размере 1,49 млрд евро (1,69 млрд долларов США). Как было упомянуто выше, это уже третий крупный штраф, полученный Google от европейского регулятора. Так, в 2017 году компанию обязали выплатить 2,4 млрд евро из-за манипуляций результатами поиска, а в 2018 году еще 4,34 млрд из-за многочисленных антимонопольных нарушений, связанных с мобильной ОС Android. Напомню, что в 2018 году претензии Еврокомиссии сосредоточились вокруг следующих нарушений антимонопольных правил: Интересно, что именно теперь, когда стало известно о новом решении Еврокомиссии и новом штрафе, специалисты Google анонсировали, что в ближайшее время европейские пользователи Android смогут самостоятельно решать, каким поисковиком и браузером они хотят пользоваться по умолчанию. В свою очередь, для Google Play, Google Chrome и Google Search были созданы отдельные лицензии, и производители смогут предложить покупателям альтернативу. При этом в компании в очередной раз подчеркнули, что Google никогда не вынуждала людей пользоваться только своими сервисами и приложениями, а пользователи всегда могли и могут отключить или удалить определенные приложения, браузеры и поисковые решения, воспользовавшись вместо них любыми другими.</content>
  <url>https://xakep.ru/2019/03/21/one-more-fine-to-google/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>2c9c157d-75cd-4b0e-b60c-442d1b151fb1</id>
  <title>Мошенник, заставивший Facebook и Google выплатить более 100 млн долларов, признал себя виновным</title>
  <keywords>BEC;Facebook;Google;whaling;мошенничество;Новости;Социальная инженерия;суд;США;фишинг</keywords>
  <content>Весной 2017 года в Литве был арестован Эвалдас Римасаускас (Evaldas Rimasauskas), которого обвинили в том, что он обманул две крупные технологические компании, чьи названия тогда не раскрывались, присвоив более 100 млн долларов. Позже стало известно, что речь шла о таких гигантах, как Google и Facebook. Причем мошенническая схема Римасаускаса была гораздо сложнее обычного фишинга и других известных техник. Правоохранители объясняли, что злоумышленник зарегистрировал в родной Литве бизнес, и имя его компании, Quanta, было точно таким же, как название азиатского производителя железа. Для этой компании Римасаускас также открыл счета в банках Латвии, Кипра и других стран мира. В период с 2013 по 2015 годы Римасаускас успешно выдавал себя за представителя Quanta, пользуясь тем, что его фирма называется точно так же. Используя почтовый спуфинг, а также подделывая счета, контракты и письма, злоумышленник сумел обмануть сотрудников Google, Facebook и даже представителей банков, заставив их осуществить крупные денежные переводы на его счета (якобы в качестве оплаты за продукты и услуги). После получения денег Римасаускас быстро выводил средства в другие банки в шести разных странах, включая Латвию, Кипр, Словакию, Литву, Венгрию и Гонконг. В настоящее время подобное мошенничество обозначают терминами whaling или BEC (Bussiness Email Compromise). В итоге Римасаускас обманом получил 23 млн долларов от Google и почти 100 млн долларов от Facebook. Как позже сообщали представители пострадавших компаний, средства вскоре удалось вернуть почти в полном объеме. В августе 2017 года Эвалдас Римасаускас был экстрадирован в США, хотя отчаянно пытался бороться против экстрадиции. Вчера, 20 марта 2019 года, Министерство юстиции США сообщило, что обвиняемый признал свою вину по первому пункту обвинительного заключения (обвинение в мошенничестве с использованием электронных средств сообщения). Теперь, согласно американским законам, ему грозит до 30 лет лишения свободы. Приговор будет вынесен в июле текущего года.</content>
  <url>https://xakep.ru/2019/03/21/rimasauskas-pleads-guilty/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>815d0d5c-62ad-4ce5-9a3b-c553ee41280b</id>
  <title>89% государственных сайтов в ЕС кишат рекламными трекерами</title>
  <keywords>GDPR;Аналитика и цифры;Европа;Интернет;Информационная безопасность;Новости;приватность;Слежка;статистика</keywords>
  <content>Проанализировав 184 683 страницы, специалисты Cookiebot подсчитали, что за посетителями 89% государственных сайтов в ЕС следят как минимум 112 компаний. Так, на 25 сайтах из 28 были обнаружены различные рекламные трекеры, которых не оказалось только на трех ресурсах, принадлежащих властям Германии, Испании и Дании. Исследователи объясняют, что правительственные сайты не получают доходов от рекламы и, по идее, должны подавать пример другим компаниям и организациям, демонстрируя, как следует вести себя в онлайне и соблюдать GDPR. К сожалению, вместо этого государственные ресурсы кишат всевозможными трекерами, которые в основном проникают на сайты в составе сторонних плагинов: видеоплееров, виджетов социальных сетей, веб-аналитики, галерей, инструментов для комментариев. Также никаких трекеров не должно быть на сайтах государственных систем здравоохранения. Ведь эти ресурсы работают с конфиденциальной и крайне «чувствительной» информацией своих посетителей. Эта категория персональных данных отдельно защищается GDPR и описана в Статье 9. Однако в 52% случаев исследователи Cookiebot обнаружили рекламные трекеры и на таких сайтах. Хуже всего ситуация обстоит у ирландской службы здравоохранения: трекеры нашли на 73% ресурсов. В конечном счете выяснилось, что за посетителями государственных сайтов наблюдают как минимум 112 сторонних компаний, и данные передаются на 131 трекинговый домен. К примеру, всего одну страницу, посвященную абортам на французском сайте, мониторит сразу 21 компания, а страницу, рассказывающую о декретном отпуске на немецком государственном ресурсе, отслеживают уже 63 компании. Сообщается, что три из пяти наиболее распространенных трекеров принадлежат компании Google. При этом стоит учесть, что исследователи не принимали во внимание трекеры Google Analytics.</content>
  <url>https://xakep.ru/2019/03/20/ad-tracking-scripts/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>1d267645-39e6-469f-be10-5d590512de56</id>
  <title>После закрытия ряда хакерских сервисов, масштабность DDoS-атак по найму сократилась на 85%</title>
  <keywords>DDoS;Аналитика и цифры;Кибератаки;Новости;статистика</keywords>
  <content>В декабре 2018 года правоохранительные органы США, Британии и Нидерландов сообщили о прекращении деятельности сразу 15 крупных сервисов DDoS-атак по найму, и аресте ряда подозреваемых. Напомню, что по данным следствия, только один из этих сервисов имел более 2000 клиентов и был ответственен за 200 000 DDoS-атак в период с октября 2014 года по ноябрь 2018 года. Как теперь сообщают эксперты компании Nexusguard, эта операция не прошла незамеченной. По данным компании, в четвертом квартале 2018 года общее количество DDoS-атак сократилось на 11%, по сравнению с аналогичным периодом в 2017 году, а мощность атак (количество трафика, направленного на цель) и вовсе упала на 85,36%. Впрочем, если сравнивать третий и четвертый кварталы 2018 года, мощность атак все же немного подросла (на 3,75%). Также специалисты отмечают снижение количества атак с использованием UDP, TCP SYN и ICMP, тогда как атаки с SSDP-амплификацией напротив продемонстрировали огромный прирос в размере 3122,22% (по сравнению с 2017 годом). Длительность атак тоже продолжает увеличиваться: за год она возросла на 175,61% и достигла среднего значения в 450 минут. Так, самая продолжительная DDoS-атака длилась 18 дней, 21 час и 59 минут. Невзирая на заметные изменения, произошедшие после закрытия 15 сервисов для DDoS-атак по найму, аналитики Nexusguard убеждены, что совместная операция ФБР и правоохранителей других стран лишь слегка затронула верхушку айсберга этой глобальной проблемы. Дело в том, что компании по-прежнему страдают из-за непропатченных ПО и железа, человеческого фактора и новых методов атак, которые появляются с завидной регулярностью (особенно с учетом роста и развития IoT).</content>
  <url>https://xakep.ru/2019/03/20/ddos-stats-3/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>e82f6120-8bcc-49ee-983b-23ea9a7dd512</id>
  <title>В популярной библиотеке для создания файлов PDF нашли опасный баг</title>
  <keywords>pdf;PHP;TCPDF;Веб-приложения;Новости;сериализация;Уязвимости</keywords>
  <content>ИБ-специалисты обнаружили серьезную уязвимость в одной из популярнейших PHP-библиотек для создания файлов PDF, TCPDF. Наряду с mPDF и FPDF эта библиотека повсеместно применяется для конвертации HTML в PDF или создания PDF-файлов «на лету». Так, TCPDF можно найти в составе многих CMS, плагинов и тем для них, CRM и HRM, во множестве веб-приложений, связанных с PDF, и так далее. Уязвимость позволяет атакующему выполнить произвольный код на уязвимом сайте или в веб-приложении, что в теории может позволить злоумышленнику установить контроль над системой. В сущности, эта проблема является вариацией другой уязвимости, найденной специалистом компании Secarma Сэмом Томасом (Sam Thomas). Он обнаружил баг во время тестирования различных PHP-приложений на предмет уязвимости перед новой проблемой десериализации, о которой стало известно летом 2018 года. Тогда Томас обнародовал доклад, в основном посвященный эксплуатации проблемы в контексте WordPress и Typo3, но также эксперт заметил уязвимость в библиотеке TCPDF, входящей в состав CMS Contao. На этой неделе исследование Томаса продолжил итальянский ИБ-исследователь, скрывающийся под псевдонимом Polict. В своем блоге он описал новую проблему сериализации (CVE-2018-17057), затрагивающую TCPDF, и очень похожую на найденный экспертом Secarma баг. По словам исследователя, проблему можно эксплуатировать двумя способами. Все сводится к тому, что библиотеке нужно передать специально «подправленные» данные, содержащие вредоносный код. В первом случае требуется, чтобы уязвимый сайт позволял пользователю участвовать в создании файла PDF, то есть давал возможность редактировать имена и прочие детали. Во втором случае нужно, чтобы сайт также был уязвим перед атаками через XSS-уязвимости, то есть атакующий должен иметь возможность поместить вредоносный код в исходный HTML, который затем обработает TCPDF. Polict пишет, что сообщил разработчикам о проблеме еще в августе 2018 года, и уже в сентябре была выпущена исправленная версия TCPDF 6.2.20. Однако пользователям следует обновиться не до этой версии, а как минимум до 6.2.22. Дело в том, что с релизом версии 6.2.20, исправляя баг, найденный Polict, разработчики случайно вновь открыли свою библиотеку для уязвимости, описанной Томасом. В версии 6.2.22 наконец были устранены обе эти проблемы. Исследователь отмечает, что решился рассказать о проблеме только сейчас, спустя полгода после выхода патча, из-за высокой опасности, которую представляет уязвимость. Исследователь хотел дать операторам сайтов и приложений как можно больше времени на установку обновлений.</content>
  <url>https://xakep.ru/2019/03/20/tcpdf-flaw/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>dc4545ec-ff4c-4ea8-a0e7-d9ab9f64ebdf</id>
  <title>Норвежский производитель алюминия Norsk Hydro подвергся атаке шифровальщика LockerGoga</title>
  <keywords>LockerGoga;Norsk Hydro;Вирусы;Вымогательский софт;Кибератаки;Новости;Норвегия;Шифровальщик</keywords>
  <content>Норвежская нефтегазовая и металлургическая компания Norsk Hydro, один из крупнейших мировых производителей алюминия, пострадала от масштабной кибератки. Согласно сообщению самой компании, атака произошла утром вторника, 19 марта 2019 года, и затронула ряд представительств Norsk Hydro в Европе и США. Так как в результате инцидента пострадало большинство ИТ-систем, часть рабочих процессов в большинстве подразделений пришлось перевести в ручной режим или приостановить вовсе. Вскоре представители Norsk Hydro уточнили на официальной странице Facebook, что жизням сотрудников ничто не угрожало, так как никаких серьезных сбоев на производствах не произошло (их ИТ-системы были надежно изолированы). Во время пресс-конференции, состоявшейся вечером вторника, в Norsk Hydro заявили, что компания стала жертвой шифровальщика LockerGoga, который проник в сеть Norsk Hydro еще в понедельник, но заражение заметили слишком поздно. В компании подтвердили, что ситуация очень серьезная, и заражение практически парализовало внутреннюю сеть компании, вызвав остановку в работе производств и офисных операциях. В настоящее время системы «возвращают к жизни» с использованием резервных копий. По данным норвежских СМИ, местный CERT уже предупреждает другие компании об угрозе LockerGoga и возможных атаках.</content>
  <url>https://xakep.ru/2019/03/20/norsk-hydro-lockergoga/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>42d710f1-f342-4057-abda-791a4b2c2f24</id>
  <title>Самые используемые уязвимости 2018 года — это баги в продуктах Microsoft</title>
  <keywords>Microsoft;Аналитика и цифры;Даркнет;Новости;статистика;Уязвимости;Эксплоиты</keywords>
  <content>Специалисты компании Recorded Future подсчитали, что в 2018 году 8 из 10 самых популярных среди злоумышленников уязвимостей были обнаружены в продуктах Microsoft. Таким образом, уязвимости в решениях Microsoft «лидируют» уже второй год подряд, тогда как в 2015-2016 годах преступников больше интересовали баги в Adobe Flash Player. Статистика Recorded Future основывается на данных из тысяч различных источников. В числе прочего, специалисты изучали репозитории с кодом, хакерские форумы и сайты в даркнете. Также исследователи проанализировали активность 167 наборов эксплоитов и 429 троянов удаленного доступа. По словам авторов отчета, существующие базы данных уязвимостей предоставляют информацию о самих проблемах, однако они не помогают понять, какие уязвимости используются для реальных атак и в каких масштабах. Эксперты рассказывают, что в общей сложности количество эксплоит-китов в прошлом году сократилось на 50%, однако по-прежнему активные наборы эксплоитов (такие как Fallout и LCG Kit) использовали хотя бы одну уязвимость из тройки наиболее популярных проблем 2018 года. При этом нужно отметить, что несмотря на общий тренд угасания эксплоит-китов, в 2018 году на сцене появились сразу пять новых наборов: Best Pack, Creep, Darknet Angler, Fallout и LCG Kit. Что касается троянов удаленного доступа (RAT), в 2018 году их появилось лишь 35 (против 47 в 2017 году). Только один RAT, Sisfader, эксплуатировал уязвимость из списка наиболее популярных. Это была проблема CVE-2017-8750, затрагивающая Microsoft Office. Полный список наиболее эксплуатируемых уязвимостей 2018 года можно увидеть в таблице ниже, но о некоторых из них расскажем немного подробнее. Так, старейшая проблема в списке исследователей (касается Microsoft Office) датирована 2012 годом, но продолжает использоваться до сих пор, а помимо продуктов Microsoft в список также попали проблемы в Adobe Flash Player и Android. Также нужно отметить, что в отчет специалистов не вошли такие нашумевшие в 2018 году проблемы, как ETERNALBLUE, Spectre и Meltdown. Аналитики Recorded Future объясняют, что в основном эти уязвимости используются для целевых атак правительственными хакерами, и их практически не применяет криминальный андеграунд, а именно это было основной темой отчета.</content>
  <url>https://xakep.ru/2019/03/20/top-cve-2018/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>9d18035a-32a5-4975-b456-fb33b2c37bc5</id>
  <title>В Техасе неизвестные взломали сирены тревоги, оповещающие о приближении торнадо</title>
  <keywords>Взлом;Новости;Система тревоги;США</keywords>
  <content>На прошлой неделе, 12 марта 2019 года, ночью были взломаны сирены тревоги, оповещающие о приближении торнадо, сразу в двух городах (Десото и Ланкастер) на севере Техаса. Между 2:30 и 4:00 утра 30 сирен начали включаться и выключаться «самостоятельно», чем немало напугали жителей (1, 2, 3). Дело в том, что к региону как раз приближался шторм, чреватый возникновением торнадо, и период с марта по май как раз считается «сезоном торнадо». В итоге муниципальные власти были вынуждены временно отключить системы вовсе. К счастью, непогода 13 марта не привела к возникновению торнадо, и сирены оповещения не понадобились. По данным CBS Dallas, местные власти уже провели расследование случившегося и пришли к выводу, что причиной произошедшего стал не случайный сбой, но злонамеренный взлом. Представители Ланкастера заявили журналистам, что саботаж работы систем экстренного оповещение населения, это уже больше, чем простой вандализм, и виновные обязательно будут найдены и понесут наказание. Нужно заметить, что это не первый инцидент такого рода. В 2017 году неизвестные «шутники» взломали и активировали 156 аварийных сирен, оповещают о приближении торнадо, в техасском Далласе. По словам жителей, тогда сирены заработали после полуночи и суммарно включались не менее дюжины раз. С тех пор власти Далласа стали использовать шифрование радиосигнала, который используется для управления сиренами. Похоже, на прошлой неделе в Десото и Ланкастере произошло то же самое.</content>
  <url>https://xakep.ru/2019/03/19/tornado-sirens-hack/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>16bac0da-5354-481b-bf44-751f0f5d0afb</id>
  <title>AMD подтвердила: уязвимость Spoiler не затрагивает процессоры компании</title>
  <keywords>AMD;Spoiler;Новости;Процессоры;Уязвимости</keywords>
  <content>В начале марта специалисты Вустерского политехнического института (США) и Университета Любека (Германия) опубликовали научный доклад, посвященный проблеме Spoiler. Равно как уязвимости Spectre и Meltdown, уязвимость связана с упреждающим (или спекулятивным — speculative) механизмом исполнения команд. В отличие от упомянутых «знаменитых» процессорных багов, Spoiler эксплуатирует буфер изменения порядка обращения (Memory Order Buffer) и связан с проприетарной имплементацией подсистемы памяти Intel. Атака позволяет наблюдать за преобразованием виртуальных адресов в физические, вычислить взаимосвязи и раскрыть структуру памяти. В итоге злоумышленник может получить доступ к паролям, ключам и другим конфиденциальным данным в активных приложениях. Исследователи писали, что Spoiler может использоваться через JavaScript и браузер; малварью, запущенной в системе; или пользователем с доступом к компьютеру. Кроме того, атака позволяет значительно облегчить и ускорить эксплуатацию проблемы Rowhammer и проведение кеш-атак по сторонним каналам (к примеру, Prime + Probe). В своем докладе специалисты писали, что проблема представляет угрозу только для процессоров Intel, однако полноценное тестирование других архитектур не проводилось. Хотя исследователи полагали, что решения Arm и AMD в безопасности, официальных подтверждений этому не было. Теперь представители AMD обнародовали официальное заявление, которое подтвердило слова экспертов: проблема Spoiler действительно не представляет угрозы для процессоров AMD в силу отличий в их архитектуре. В чипах AMD используется другой подход к управлению операциями в оперативной памяти и кеше. Напомню, что с продуктами Intel ситуация обстоит значительно хуже. Уязвимость затрагивает все процессоры Intel, начиная с первого поколения Intel Core (включая песочницы и виртуальные машины) и заканчивая еще не вышедшими Cascade Lake и Ice Lake. Хуже того, согласно докладу группы, софтверные «заплатки» в данном случае не помогут, а аппаратные исправления, вероятно, придется ждать долго (по оценке исследователей, на такие архитектурные изменения может уйти до 5 лет), и они наверняка скажутся на производительности процессоров. Впрочем, представители Intel сообщали, что существующих защитных механизмов (в том числе KPTI), а также существующих защитных практик против Rowhammer должно быть достаточно для значительного уменьшения рисков и затруднения эксплуатации Spoiler.</content>
  <url>https://xakep.ru/2019/03/19/amd-spoiler/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>05e4cca4-c164-46ca-b559-358427bd9cef</id>
  <title>ODT под прицелом. Как заставить документы OpenOffice запускать произвольные файлы</title>
  <keywords>Apache OpenOffice;LibreOffice;Взлом;Выбор редактора;Обход каталога;Разбор уязвимостей;Статьи;Уязвимости;фишинг</keywords>
  <content>Большинство фишинговых приемов направлены на эксплуатацию уязвимостей в Microsoft Office, так как это самый популярный офисный пакет. Однако сейчас многие фирмы переходят на LibreOffice и OpenOffice, в том числе ошибочно считая их неуязвимыми. С ростом популярности этих программных пакетов они тоже стали привлекать внимание хакеров и независимых исследователей. Просто, в отличие от набивших оскомину багов MS Office, информации об уязвимостях в опенсорсных пакетах пока накопилось не так уж много. Целью моего исследования будет не столько рассмотреть уязвимость какой-то конкретной версии программы, сколько разобрать формат ODT и особенности его обработки. Найденная уязвимость позволяет выполнить несанкционированный доступ к файловой системе, используя атаку обхода пути (path traversal attack). Это одна из самых часто встречающихся уязвимостей и канонический тип атаки. В данном случае злонамеренно модифицированный файл ODT может загрузить за пределами родительского каталога скрипт на Python, который получит доступ к файловой системе и выполнит любые указанные действия с правами текущего пользователя. Первым данную уязвимость обнаружил старший пентестер немецкой фирмы Cure53 Алекс Инфур (Alex Infuhr). Он предал свою находку огласке, и LibreOffice пропатчили, однако все версии до 6.0.7 (крайне популярные сейчас) по-прежнему уязвимы. Немного размытой остается ситуация с Apache OpenOffice. Отдельного патча нет, и текущая версия 4.1.6 уязвима до сих пор. Сторонняя компания ACROS Security включила в свой агент 0patch заплатку для данной уязвимости, но только в версиях OpenOffice и LibreOffice для Windows. Более подробно см. на их сайте. Данный агент распознает и блокирует известные уязвимости, препятствуя их эксплуатации. Для его запуска надо будет пройти несложную регистрацию. Во время работы агента при запуске уязвимого файла всплывает небольшое уведомление, а при наведении курсора на гиперссылку он заблокирует запуск неоригинального скрипта. Я связался с разработчиками агента, пытаясь пролить свет на работу данной функции. Их ответ приведен на скриншоте. Наш микропатч для LibreOffice и OpenOffice просто проверяет, что [в документе] нет типичных шаблонов для выполнения атаки «обход пути», таких как «../», «\..» или «..|». Интересно, что некоторые антивирусы также ищут признаки эксплоита по всему документу, включая его текстовые поля и игнорируя формат. Например, «Антивирус Касперского» ругается даже на эту статью, если попытаться открыть ее черновик в OpenOffice как .odt или в MS Office как .docx. Разберем суть уязвимости. Во время инсталляции LibreOffice в Windows также устанавливается интерпретатор Python 3. Он находится по известному адресу C:\Program Files\LibreOffice\program\python-core-3.5.5\bin. Офисный пакет может исполнить Python-скрипт, если указать ссылку на него внутри документа и правильно сослаться на него. Документы .odt основаны на XML (как и .docx), поэтому их внутреннюю структуру легко изучать и модифицировать. Здесь открывается большой простор для разных вариантов атак, но в общем случае нам необходимо создать в документе какую-либо задачу, которая запустит скрипт на Python. Вот тут и наступает самое интересное. Если подменить путь к исполняемому коду и он будет соответствовать правилам исполнения, то LibreOffice выполнит его, не проверяя путь к скрипту. Например, мы можем выйти за рамки рабочей директории, и ничего нам за это не будет… а вот жертве — будет! Все описанное выше справедливо и для OpenOffice, просто в нем используется Python 2, поэтому местоположение некоторых скриптов будет другое. Это нужно учесть, если ты захочешь написать универсальный файл, эксплуатирующий уязвимость в обоих офисных пакетах. Все тесты проведены на Windows 10 версия 1803 сборка 17134.523. За основу взят пакет LibreOffice последней уязвимой версии 6.0.6.2. Материалы из последних выпусков можно покупать отдельно только через два месяца после публикации. Чтобы продолжить чтение, необходимо купить подписку. Подписка позволит тебе в течение указанного срока читать ВСЕ платные материалы сайта. Мы принимаем оплату банковскими картами, электронными деньгами и переводами со счетов мобильных операторов. Подробнее о подписке 7390 р. 720 р.</content>
  <url>https://xakep.ru/2019/03/19/odt-path-traversal/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>ac77bc25-5452-4f28-95ef-722ca2017d1d</id>
  <title>Шифровальщик JNEC.a распространяется с помощью уязвимости в WinRAR</title>
  <keywords>JNEC.a;Windows;WinRAR;Архиваторы;Вымогательский софт;Новости;Уязвимости;Шифровальщик</keywords>
  <content>В конце февраля 2019 года специалисты Check Point сообщили о серьезной уязвимости (CVE-2018-20250) в WinRAR и продемонстрировали ее эксплуатацию. Практически все 500 млн пользователей WinRAR оказались под угрозой, так как найденная проблема существовала в коде архиватора примерно 19 лет. Проблему устранили с релизом WinRAR 5.70 Beta 1, еще в январе текущего года. Разработчики приняли решение отказаться от поддержки формата ACE вовсе. Тем не менее, первые атаки на уязвимость были замечены экспертами уже в феврале, а на прошлой неделе стало известно, что для бага появилось уже более 100 разных эксплоитов. Теперь специалисты 360 Threat Intelligence Center предупредили о появлении шифровальщика JNEC.a, который написан на .NET и тоже распространяется с помощью свежей уязвимости. Warning!!!Possibly the first #ransomware (vk_4221345.rar) spread by #WinRAR exploit (#CVE-2018-20250). The attacker lures victims to decompress the archive through embedding a corrupt and incomplete female picture. It renames files with .Jnec extension.https://t.co/MHNgHw7zAI pic.twitter.com/Tn5SoXht2A — 360 Threat Intelligence Center (@360TIC) March 18, 2019 Исследователи пишут, что атакующие обманом вынуждают своих жертв распаковать вредоносный архив, из-за чего шифровальщик проникает в директорию Startup и начинает работу при следующем входе в систему. Малварь маскируется под файл GoogleUpdate.exe, который легко спутать с настоящим средством обновления Google. Интересной особенностью JNEC.a является механизм, с помощью которого жертвы должны оплачивать выкуп и связываться со злоумышленниками. Пострадавшим предлагается создать на Gmail ящик с определенным уникальным адресом (указан в требовании преступников) и перевести 0,05 BTC (около 200 долларов США) на кошелек преступников, после чего жертве на свежесозданный ящик пришлют ключ дешифрования. Эксперты отмечают, что в настоящее время, согласно VirusTotal, лишь 34 защитных продукта определяют JNEC.a как угрозу. Кроме того, скверную новость для всех пострадавших сообщил известный ИБ-специалист Майкл Гиллеспи (Michael Gillespie). По данным эксперта, разработчики JNEC.a допустили в коде ошибку, и пострадавшая в результате работы шифровальщика информация не подлежит восстановлению, расшифровать файлы не смогут даже сами преступники. PSA: DO NOT PAY. The criminals fucked up the key usage and even they cannot decrypt people's files. 🤦♂️ — Michael Gillespie (@demonslay335) March 18, 2019</content>
  <url>https://xakep.ru/2019/03/19/jnec-a/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>4d36932a-848d-4955-8eba-74b13de3ce2a</id>
  <title>MySpace потеряла все данные пользователей за 12 лет</title>
  <keywords>MySpace;Новости;Ошибки;Социальные сети;хранение данных</keywords>
  <content>Пользователи Reddit обратили внимание, что давно утратившая популярность социальная сеть MySpace потеряла все данные пользователей, загруженные с 2003 по 2015 годы (включая музыку, фотографии и видео). Впервые тот факт, что старые данные недоступны, обнаружили еще в феврале прошлого года, однако тогда это практически никого не заинтересовало, а представители социальной сети сообщили, что работают над проблемой. Как оказалось, позже сотрудники MySpace признали, что потеряли все пользовательские данные за указанный период времени, но это осталось незамеченным. Тогда в ответ на запрос пользователя специалисты MySpace сообщили в письме, что во время переноса информации на новые серверы данные были повреждены и восстановить их невозможно. Очевидно, бэкапов у компании не было. Теперь, год спустя, пользователь Reddit собрал все эти факты воедино и вновь попытался привлечь внимание к проблеме. На этот раз сработало: теперь оповещение о потерянных данных появилось на официальном сайте MySpace и в медиаплеере, а случившееся придали широкой огласке. Бывший технический директор Kickstarter Энди Байо (Andy Baio) подсчитал, что в общей сложности компания потеряла порядка 50 млн композиций 14 млн исполнителей. Байо пишет, что произошедшее вызывает у него подозрения, так как подобная вопиющая некомпетентность, в которой расписались разработчики MySpace – это, конечно, плохой PR, но все равно выглядит лучше ответа «мы решили не тратить силы и средства на перенос и хостинг 50 млн старых MP3». I'm deeply skeptical this was an accident. Flagrant incompetence may be bad PR, but it still sounds better than "we can't be bothered with the effort and cost of migrating and hosting 50 million old MP3s." — Andy Baio (@waxpancake) March 18, 2019</content>
  <url>https://xakep.ru/2019/03/19/myspace-data-lost/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>c7f43b57-f8e7-412e-bc98-2b850588d3aa</id>
  <title>DeviceLock DLP. Как распознавание текста помогает предотвращать кражу паспортов</title>
  <keywords>DeviceLock;DLP;OCR;распознавание образов</keywords>
  <content>Современные системы DLP умеют распознавать в потоке передаваемых данных документы, удостоверяющие личность. Причем перехватить попытку передачи такого документа за периметр можно даже в том случае, если речь идет об отправке по электронной почте скан-копии или печати документа на принтере. Одна из базовых задач для DLP — это обнаружение в потоке передаваемых данных различных государственных документов, удостоверяющих личность (паспорта, свидетельства о рождении, водительские удостоверения и т.п.), и предотвращение их несанкционированного распространения. Если документы представлены в виде текстовых данных в электронных таблицах, базах данных и т.п., то обычно это не вызывает никаких проблем при условии, что DLP-система поддерживает контентную фильтрацию. Однако что делать, если речь идет о сканах документов? Рассмотрим на примере комплекса DeviceLock DLP, как можно создать политику DLP, запрещающую печать на принтерах, отправку по электронной почте (SMTP) и заливку в облачные файловые хранилища сканов паспортов. Особенность DeviceLock DLP состоит в том, что оптическое распознавание символов (OCR) производится непосредственно на компьютере пользователя резидентным модулем OCR, который входит в состав агента DLP. Встроенный OCR позволяет извлекать текст из графических файлов и затем проверять его правилами, построенными на анализе содержимого передаваемых файлов и данных. Это происходит непосредственно в момент, когда пользователь совершает действия с этими файлами, без их передачи на сторонний сервер для распознавания. Такая архитектура позволяет DeviceLock DLP быстро принимать решение о запрещении или разрешении пользовательской операции. Отдельно отмечу, что агентская реализация DLP принципиально исключает необходимость передачи пользовательских данных за пределы защищаемого компьютера для любого типа анализа, в том числе OCR, что позволяет успешно эксплуатировать DeviceLock DLP в странах с очень жестким законодательством в сфере охраны прав работников, например, в Германии и Франции. В качестве тестового образца будем использовать этот скан российского паспорта в формате JPG. Для начала создадим составное правило контентной фильтрации. «Ловить» сканы паспортов мы будем по характерным для российского паспорта словам из встроенного в DeviceLock DLP словаря и по номерам, причем интерес для нас представляют только графические файлы (всего поддерживается более 30 графических форматов). Затем применим правило контентной фильтрации к SMTP-протоколу, облачным хранилищам и принтерам. Согласно поставленной выше задаче – выставим запреты на отправку по сети и печать попавших под правило файлов. Дополнительно включим протоколирование действий пользователей, чтобы видеть в логах попытки передачи и печати сканов паспортов. Теперь попробуем залить скан паспорта на «Яндекс Диск». При этом в логе аудита создалась запись об этой неудачной попытке. При попытке распечатать скан паспорта DeviceLock DLP остановит печать в момент отправки задачи на принтер и покажет вот такое сообщение. Неудача нас постигнет и в момент отправки скана по SMTP. В логе аудита можно увидеть все следы. В заключении хочу добавить, что DeviceLock DLP поддерживает оптическое распознавание символов (OCR) для всех основных языков, включая русский, английский, немецкий, китайский, японский и т.д. Текст может извлекаться из отсканированных документов, сфотографированных под углом до 90 градусов к фотографируемой поверхности документов, а также скриншотов документов.</content>
  <url>https://xakep.ru/2019/03/19/devicelock-dlp/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>fe39dd5b-5194-45d3-8d7a-9f94b98149c4</id>
  <title>Новая вариация Mirai использует 27 эксплоитов</title>
  <keywords>IoT;Mirai;Ботнеты;Интернет вещей;Новости;Уязвимости</keywords>
  <content>Вредонос Mirai хорошо знаком каждому, кто следит за происходящим в сфере информационной безопасности. Еще в 2016 году малварь «прославилась» во время мощнейших DDoS-атак против DNS-провайдера Dyn и европейского провайдера OVH (тогда мощность атаки составила 1 Тб/сек). В том же году исходные коды Mirai были опубликованы в открытом доступе, что привело к появлению множества новых IoT-вредоносов, построенных на базе этих исходников (Wicked, Satori, Okiru, Masuta и так далее), а также огромного количества мощных IoT-ботнетов. Mirai и его производные по-прежнему представляют большую опасность, хуже того, специалисты до сих пор находят новые, до- и переработанные версии малвари. Так, на этой неделе специалисты Palo Alto Networks обнаружили новую версию Mirai, которая оснащена сразу 27 эксплоитами, 11 из которых являются новыми для этого типа вредоносов. Данная вариация Mirai все так же атакует устройства интернета вещей и сетевое оборудование через Telnet, и комплектуется встроенным списком учетных данных по умолчанию, по которому осуществляет перебор. Исследователи отмечают, что данный список пополнился новыми комбинациями. Кроме того, в определенный момент хакеры перестали ограничиваться простым брутфорсом и добавили Mirai возможность использования эксплоитов. Новая версия вредоноса продолжает эту «традицию» и атакует даже такие девайсы, которые ранее не попадали под прицел злоумышленников. Дело в том, что обычно жертвами Mirai становятся модемы, роутеры, камеры видеонаблюдения, DVR и NVR системы (в редких случаях заражению могут подвергнуться смартфоны, «умные» телевизоры, серверы). Но исследователи Palo Alto Networks заметили, что найденная ими версия Mirai также эксплуатирует уязвимости в беспроводных решениях для презентаций WePresent WiPG-1000 и коммерческих телевизорах LG Supersign. Эксплоиты для этих устройств ранее уже были доступны в онлайне (1, 2), но теперь их впервые стали использовать для проведения реальных атак. В таблице ниже можно увидеть все новые для Mirai эксплоиты, найденные в этой версии малвари. Нужно отметь, что отчет Palo Alto Networks появился всего через несколько дней после предупреждения, опубликованного известным ИБ-специалистом, основателем Bad Packets LLC, Троем Муршем (Troy Mursch). Тот предупреждал, что наблюдается значительный подъем активности Mirai. Mirai-like detections continue an upward trend over the last 60 days. Largest spike of activity happened in the last two weeks. @circl_lu has shared a similar observation. Will botnets infected with Mirai-like #malware ever go away? pic.twitter.com/MVMBHNa5lV — Bad Packets Report (@bad_packets) March 16, 2019</content>
  <url>https://xakep.ru/2019/03/19/new-mirai-exsploits/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>59f689f0-72e9-48ff-a31a-fc2fba624046</id>
  <title>Двухфакторную аутентификацию Office 365 и G Suite обходят через IMAP</title>
  <keywords>Credential stuffing;G Suite;IMAP;Office 365;Брутфорс;Новости;фишинг</keywords>
  <content>Специалисты Proofpoint опубликовали отчет, согласно которому, клиенты облачных сервисов Office 365 и G Suite регулярно подвергаются атакам через протокол IMAP. Таким образом злоумышленники обходят двухфакторную аутентификацию, проникают в сети компаний, а затем используют полученный доступ для фишинговых операций или дальнейшего «углубления» атаки. По данным исследователей, хакеры используют IMAP для так называемых credential stuffing атак, то есть атак, направленных на подбор учетных данных. Этим термином обозначают как обычный брутфорс, так и ситуации, когда имена пользователей и пароли похищаются с одних сайтов, а затем используются против других (здесь злоумышленникам пригождаются многочисленные утечки данных и крупные дампы учетных данных). Атаки против клиентов Office 365 и G Suite были особенно активны в период с сентября 2018 по февраль 2019 годов. По информации Proofpoint, злоумышленников в основном интересовали аккаунты руководителей и административного персонала. Такие атаки затронули более 2% всех учетных записей облачных платформ. Около 72% арендаторов облачных сервисов подверглись как минимум одной такой атаке, и в 40% случаев был обнаружен хотя бы один скомпрометированный аккаунт. В среднем преступникам удавалось взломать 15 аккаунтов из каждых 10 000. Злоумышленники действовали преимущественно с нигерийских и китайских IP-адресов, 65% и 26%, соответственно. В основном атаки исходили от взломанных роутеров и серверов. Если после успешного взлома обнаруживалось, что у жертвы нет прямого доступа к финансовым средствам или ценной информации, хакеры использовали скомпрометированный аккаунт для рассылки фишинговых посланий (как внутри компании, так и другим организациям), меняли правила переадресации электронных писем, а порой устраивали man-in-the-middle атаки.</content>
  <url>https://xakep.ru/2019/03/18/imap-password-spraying/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>91f410aa-a952-4c6c-a916-3acdfc0b4c00</id>
  <title>18-летний житель Японии арестован из-за кражи 130 000 долларов в криптовалюте</title>
  <keywords>Blockchain;Monacoin;Monappy;Арест;Взлом;Криптовалюта;Новости;Япония</keywords>
  <content>Издание Japan Today и другие японские СМИ сообщили, что 18-летнему подростку из префектуры Тотиги предъявлены обвинения во взломе платформы Monappy и кошельков Monacoin. По данным журналистов, в период с 14 августа по 1 сентября 2018 года он похитил 93078,7316 токенов (около 130 000 долларов на момент атаки) криптовалюты Monacoin у 7735 пользователей Monappy. Полиция сообщила, что подозреваемый пытался использовать Tor для сокрытия личности, но эти попытки не увенчались успехом, и его удалось вычислить по логам, которые следствию предоставили разработчики скомпрометированной платформы. По данным самих разработчиков Monappy, подозреваемый воспользовался уязвимостью, связанной с функциональностью подарочных кодов, которая появилась у платформы в 2017 году. Она позволила злоумышленнику перегрузить систему запросами, отправив самому себе многочисленные переводы, используя один и тот же подарочный код. Полученные таким образом средства подросток перевел на несколько криптовалютных бирж и конвертировал в другие валюты. Атака привела к тому, что в ноябре 2018 года представители платформы Monappy объявили о временном прекращении работы. Разработчики пообещали, что Monappy вернется в строй после проведения аудита безопасности с привлечением сторонних экспертов, и только после того, как они убедятся в безопасность сервиса. В настоящее время Monappy по-прежнему не работает. В центральном полицейском департаменте Токио подчеркнули, что это первый в истории страны случай, когда подозреваемого не просто обвиняли во взломе чего-либо, но во взломе, связанном с хищением криптовалюты.</content>
  <url>https://xakep.ru/2019/03/18/monappy-hack/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>88f29683-145a-4d11-a3d3-edb22f5aeca6</id>
  <title>Беспроводные клавиатуры Fujitsu уязвимы перед инжектами и не только</title>
  <keywords>Fujitsu;Proof of concept;Железо;Клавиатура;Новости;Уязвимости</keywords>
  <content>Эксперты немецкой пентестинговой компании SySS GmbH предупредили, что клавиатуры Fujitsu из набора Fujitsu Wireless Keyboard Set LX901 (клавиатура и мышь) лучше не использовать в компаниях со строгими требованиями к безопасности. Исследователи объясняют, что в данном случае дело не в слабой криптографии (клавиатура и USB-ресивер сообщаются посредством проприетарного протокола 2,4 ГГц и используют AES-шифрование). Проблема в том, что USB-ресивер может принимать не только зашифрованные сигналы от самой клавиатуры, но и незашифрованные сигналы, формат которых описан в демо комплекте для разработчиков. Это открытие не только позволило специалистам SySS GmbH сконструировать вредоносный передатчик и направить клавиатуре виртуальные команды (осуществить инжекты), но и объединить этот эксплоит с атакой повтора (replay attack) на более старые модели клавиатур Fujitsu, описанной еще в 2016 году. Данная атака позволяет удаленно атаковать уязвимый компьютер даже при активном экране блокировки. Что получилось, можно увидеть в ролике, опубликованном исследователями. Они подчеркивают, что все необходимое для осуществления атаки оборудование можно легко спрятать под одеждой или даже в кармане. То есть злоумышленнику останется только приблизиться к целевому компьютеру. Специалисты с сожалением констатируют, что сообщили инженерам Fujitsu о проблеме еще в октябре прошлого года, но общение с компанией прервалось почти сразу. В докладе исследователи отмечают, что вряд ли от Fujitsu стоит ожидать патча, так как компания до сих пор не исправила даже вышеупомянутую проблему, найденную в 2016 году. Тем не менее, эксперты все же решили попытаться привлечь внимание к уязвимости, обнародовав данные о ней. Подозрения экспертов о том, что исправления можно не ждать, подтверждают и сами представители Fujitsu. Они сообщили, что описанную исследователями атаку не так легко воплотить в жизнь (ведь атакующему нужно физически подойти к уязвимому устройству довольно близко), а продукт исходно не был предназначен для использования в компаниях со строгими требованиями к безопасности. Исследователи пишут, что они не стали бы использовать такие клавиатуры вовсе или хотя бы в любом окружении, где неподалеку от компьютера могут находиться посторонние лица (сотрудники, посетители, гости и так далее). Хотя специалисты проверили свою атаку только на модели LX901, они полагают, что другие беспроводные клавиатуры производителя также могут быть уязвимы перед подобными атаками.</content>
  <url>https://xakep.ru/2019/03/18/lx901-flaw/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

<row>
  <id>fa9ad191-f726-4b87-89a4-990bb18638fa</id>
  <title>Трояны на продажу. Изучаем подпольный рынок вредоносного ПО</title>
  <keywords>Вирусы;Выбор редактора;малварь;Обзоры;Статьи;электронная коммерция</keywords>
  <content>Среди коммерческих троев отдельную нишу занимают стилеры и подобная спайварь. Оно и неудивительно: чужие секреты всегда были в цене. Сегодня мы побеседуем о доступных в свободной продаже троянах-шпионах, об их особенностях, функциональных возможностях и методах борьбы с этим вселенским злом. Приступим, пожалуй. Сестра, скальпель! Стилер со столь труднопроизносимым названием активно продавался в Сети до тех пор, пока автором не заинтересовались суровые люди в погонах. Первая версия троянчика была написана на .NET, вторая, названная N0F1L3v2, — на С#. Трой специализировался на хищении паролей из браузеров Chrome, Opera, Yandex, Torch, Amiga, Cometa и Orbitum. Стилер был выставлен на продажу сразу на нескольких форумах по весьма скромной цене, причем в двух версиях: за 15 и 45 долларов соответственно. Исходники автор сливал за 600 долларов. Первый релиз требовал для работы .NET 2.0, таскал с собой библиотечку sqlite3.dll и дропал на диск нужный файл этой либы в соответствии с разрядностью винды. Украденные пароли он сохранял в текстовый файл с HTML-разметкой прямо на зараженной машине, а затем заливал его на сервер. Вторая версия отличалась от первой отсутствием зависимостей, благодаря чему теоретически могла работать на чистой системе. Кроме того, она научилась тырить инфу из Firefox, чего первая модификация N0F1L3 так и не осилила. Стилер собирал из браузеров куки, данные автозаполнения форм и пароли, копировал с рабочего стола файлы с расширениями .doc, .docx, .txt и .log. Из популярного FTP-клиента FileZilla он угонял файлы filezilla_recentservers.xml и filezilla_sitemanager.xml. Также трой пытался украсть криптокошельки BTC, BCN, DSH, ETH, LTC, XMR, ZEC, после чего распихивал все это богатство по локальным папкам и выгружал на управляющий сервак в виде архива. N0F1L3 оборудован написанной на PHP админкой, в которой можно посмотреть статистику трояна и его логи. Автор не просто продавал стилер, а еще и предлагал анонимусам другие связанные с ним коммерческие услуги: обновления, добавление поддержки других браузеров и решение всевозможных технических проблем. Неудивительно, что вскоре доброжелатели стали активно перепродавать N0F1L3 на множестве популярных и не очень площадок, а после того, как у автора начались проблемы с законом, стилер и вовсе выложили в паблик. Исходники и билды этого трояна различной степени свежести можно отыскать на тематических бордах и сегодня. Все версии N0F1L3 и его многочисленные модификации отлично палятся антивирусами, но, если ты, юзернейм, принципиально не пользуешься таковыми, выявить присутствие стилера в системе совсем не сложно. Более ранняя модификация троя сохраняет украденное в файлик %LOCALAPPDATA%\f.txt, его наличие точно укажет тебе на факт заражения. N0F1L3v2 создает в %TEMP% папки с говорящими именами Browsers, Wallets, Files и Directory, в первой обычно лежат файлы с вытащенной из браузеров инфой — Passwords.txt, Cookie.txt, CC.txt и Autofill.txt. Прятаться в системе N0F1L3 не умеет, так что спалить его — дело техники. Еще один «стилак-форте» того же самого автора, названный не то в честь титана из греческой мифологии, не то в честь героя игрушки God of War, что более вероятно. Трой был практически полностью переписан на С++, правда значительная часть функций в его коде начинается с антиотладочной вставки на ассемблере, проверяющей состояние поля BeingDebugged в структуре PEB. Эта структура создается в памяти процесса при его запуске и содержит информацию об окружении, загруженных модулях, а также прочие полезные данные. По смещению byte ptr [rax+2] в этой структуре находится флаг, позволяющий определить, что процесс трояна запущен под дебаггером, и завершить его. В дополнение к уже реализованным у его предшественников функциям Kratos умеет делать скриншоты (картинка сохраняется в %TEMP% под именем screenshot.bmp) и копировать файлы из папки клиента Telegram %AppData%\Telegram Desktop\tdata. Кроме этого, стилер обращается к реестру в поисках ветви [HKCU\Software\Valve\Steam]. Обнаружив ее, по содержимому ключа SteamPath он определяет место установки клиента Steam, а затем тырит оттуда файлы config\config.vdf, config\loginusers.vdf и config\SteamAppData.vdf. Все украденное Kratos упаковывает в архив и шлет на управляющий сервер POST-запросом. Kratos использует админку, в целом аналогичную N0F1L3 (разве что дефолтная фоновая картинка не такая няшная). Сам разработчик продавал свое творение за 5000 рублей, но на всем известных площадках быстро отыскались анонимусы, готовые уступить билды за 1500 и даже чуть дешевле — за лайк, симпу, отзыв или плюсик в репу. А после деанона автора и последовавших за этим печальных событий стилер появился в паблике и вовсе бесплатно. В результате Kratos расползся по этим вашим интернетам, как тараканы по студенческой общаге, периодически вылезая из укромных щелей то там, то тут. Дуст оказался неэффективен, такое можно выжечь только напалмом. Антивирусы вычисляют этого трояна на раз-два. Определить присутствие «Кратоса» в системе можно по наличию в %TEMP% тех же самых папок, что и у N0F1L3, разве что к ним добавились директории Telegram и Steam с вполне очевидным содержимым. Материалы из последних выпусков можно покупать отдельно только через два месяца после публикации. Чтобы продолжить чтение, необходимо купить подписку. Подписка позволит тебе в течение указанного срока читать ВСЕ платные материалы сайта. Мы принимаем оплату банковскими картами, электронными деньгами и переводами со счетов мобильных операторов. Подробнее о подписке 7390 р. 720 р.</content>
  <url>https://xakep.ru/2019/03/18/commercial-spyware-2/</url>
  <student_id>50c3e78f-6c18-48e6-a857-cd4e1c2de901</student_id>
</row>

</articles>
